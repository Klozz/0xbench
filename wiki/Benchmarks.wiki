= Current included benchmarks =
  # Linpack
   The Linpack Benchmark make use of numerical linear algebra operation to test the device's ability to perform floating point operations (MFLOPS). For detail please refer to [http://en.wikipedia.org/wiki/LINPACK Wikipedia], [http://www.netlib.org/benchmark/linpackjava/ netlib.org], [http://www.cs.cmu.edu/~jch/java/linpack.html cs.cmu.edu]. The original source can be found online here: [http://www.cs.cmu.edu/~jch/java/LinpackLoop.java Source code].
  # Scimark2
   The Scimark2 Benchmark Suite includes several scientific calculation (including FTT, MonteCarlo ..etc) for testing the device's abilitity to perform floating point operations (MFLOPS). For detail please refer to [http://math.nist.gov/scimark2/ nist.gov].
  # LibMicro
   A portable set of microbenchmarks that performs abundant system calls to measure the performance of different system and library calls. Since calling system functions directly is required for this benchmark, the executable files for this benchmark needs to be deployed in advance. (Which will require root permission of your device)
  # Canvas Redraw
   Use random color to redraw canvas repeatedly, and calculate the refresh rate.     
  # Draw Circle
   A simple 2D animation program. Calculate the refresh rate.
  # GL Cube
   A sample program from the Android API Demo that uses OpenGL ES to render the rotating Rubik's Cube.
  # GL Teapot
   Use OpenGL ES to render a rotating Utah Teapot ([http://en.wikipedia.org/wiki/Utah_teapot Wikipedia]). Adapted from [http://code.google.com/p/android-utah-teapot/ android-utah-teapot] project (which uses source code from Android SDK sample programs and iPhone SDK sample programs).
  # NeHe Lesson08
   A rotating 3D cube with textured applied and alpha blending enabled. For detail please refer to [http://nehe.gamedev.net/lesson.asp?index=02 nehe.gamedev.net](blending). For source code and explanation please refer to [http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=08 NeHe lesson08].
  # NeHe Lesson16
   A rotating 3D cube with textured applied and GLFog enabled. For detail please refer to [http://nehe.gamedev.net/lesson.asp?index=04 nehe.gamedev.net](Cool look fog). For source code and explanation please refer to [http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=16 NeHe lesson16].
  # Garbage Collection
   Test the performance of garbage collection on the Dalvik VM. For detail please refer to [http://www.hpl.hp.com/personal/Hans_Boehm/gc/gc_bench.html hpl.hp.com]. Adapted from [http://www.hpl.hp.com/personal/Hans_Boehm/gc/gc_bench/GCBench.java GCBench.java]